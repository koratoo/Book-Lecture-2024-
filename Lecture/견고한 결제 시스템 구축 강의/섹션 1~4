# 결제 시스템 설계 및 구현 교육 프로그램

## 목차
- [섹션 1. Payment System 설계](#섹션-1-payment-system-설계)
- [섹션 2. 결제 승인 기능 구현](#섹션-2-결제-승인-기능-구현)
- [섹션 3. 결제 복구 기능 구현](#섹션-3-결제-복구-기능-구현)
- [섹션 4. 결제 승인 메시지 발행](#섹션-4-결제-승인-메시지-발행)


## 섹션 1. Payment System 설계
- **Payment System 설계 (32:59)**: 결제 시스템의 전반적인 설계에 대해 설명합니다. 결제 프로세스의 기본 개념과 아키텍처를 이해할 수 있습니다.

## 섹션 2. 결제 승인 기능 구현
- **실습 준비 (05:09)**: 실습을 위한 환경 설정과 준비 과정을 다룹니다.
- **Toss Payments 결제 연동 (14:41)**: Toss Payments API를 이용해 결제 기능을 연동하는 방법을 배웁니다.
- **Payment Service 데이터 모델링 (08:56)**: 결제 서비스의 데이터 모델을 설계하고, 데이터베이스 스키마를 정의합니다.
- **가상의 Checkout 기능 구현 (29:19)**: 가상의 결제 기능을 구현하여 실제 결제 프로세스를 시뮬레이션합니다.
- **결제 승인 기능 구현 (47:13)**: 결제 승인 기능을 상세하게 구현합니다.
- **결제 승인 에러 핸들링 (feat: Retry, Timeout) (25:07)**: 결제 승인 중 발생할 수 있는 에러를 처리하는 방법을 다룹니다.

## 섹션 3. 결제 복구 기능 구현
- **결제 복구 서비스 (feat: Bulk Head, Parallel Processing) (24:36)**: 결제 복구 기능을 구현하여 시스템의 안정성을 높입니다.

## 섹션 4. 결제 승인 메시지 발행
- **Confluent Kafka 연동 (10:11)**: Confluent Kafka를 연동하여 메시지 발행 기능을 구현합니다.
- **결제 승인 메시지 발행 (feat: Transactional Outbox Pattern, Apache Kafka) (37:45)**: Transactional Outbox Pattern을 사용하여 결제 승인 메시지를 발행합니다.
- **신뢰성 있게 카프카를 사용하는 방법 (18:58)**: 카프카를 신뢰성 있게 사용하는 방법을 배웁니다.

